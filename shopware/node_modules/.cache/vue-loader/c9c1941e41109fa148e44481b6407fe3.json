{"remainingRequest":"C:\\Users\\User-9100\\Documents\\Front-end\\Angular.js and Vue.js\\Lesson 13\\shopware\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\User-9100\\Documents\\Front-end\\Angular.js and Vue.js\\Lesson 13\\shopware\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\User-9100\\Documents\\Front-end\\Angular.js and Vue.js\\Lesson 13\\shopware\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User-9100\\Documents\\Front-end\\Angular.js and Vue.js\\Lesson 13\\shopware\\src\\views\\Product.vue?vue&type=template&id=35171425&","dependencies":[{"path":"C:\\Users\\User-9100\\Documents\\Front-end\\Angular.js and Vue.js\\Lesson 13\\shopware\\src\\views\\Product.vue","mtime":1585665631843},{"path":"C:\\Users\\User-9100\\Documents\\Front-end\\Angular.js and Vue.js\\Lesson 13\\shopware\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User-9100\\Documents\\Front-end\\Angular.js and Vue.js\\Lesson 13\\shopware\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\User-9100\\Documents\\Front-end\\Angular.js and Vue.js\\Lesson 13\\shopware\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\User-9100\\Documents\\Front-end\\Angular.js and Vue.js\\Lesson 13\\shopware\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}